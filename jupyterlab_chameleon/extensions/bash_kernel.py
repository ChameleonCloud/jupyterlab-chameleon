import os
import requests

def refresh_oauth_token_task():
    """Refresh the OS_ACCESS_TOKEN environment variable periodically.

    This is necessary because access tokens generated by Keycloak have a
    relatively short lifetime.
    """
    def task_fn():
        hub_url = os.getenv('JUPYTERHUB_BASE_URL')
        hub_token = os.getenv('JUPYTERHUB_API_TOKEN')

        if not (hub_url and hub_token):
            raise ValueError('Missing JupyterHub authentication info')

        res = requests.get(f'{hub_url}services/oauth-refresh/tokens', headers={
            'authorization': f'token {hub_token}'
        })
        access_token = res.json().get('access_token')

        if not access_token:
            raise ValueError('Could not refresh access_token')

        os.environ['OS_ACCESS_TOKEN'] = access_token

    return task_fn, {'interval_s': 120}
